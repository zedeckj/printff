#define _print_type_helper switch (va_arg(argp, int)) { \
					case VOIDP_ANN: l += printf("%p", va_arg(argp, void*)); \
					break; \
					case CHRP_ANN: l += printf("%s", va_arg(argp, char*)); \
					break; \
					case INT_ANN: l += printf("%d", va_arg(argp, int)); \
					break; \
					case UINT_ANN: l += printf("%u", va_arg(argp, unsigned int)) ; \
					break; \
					case SHORT_ANN: l += printf("%hi", va_arg(argp, int)); \
					break; \
					case USHORT_ANN: l += printf("%hu", va_arg(argp, int)); \
					break; \
					case CHAR_ANN: l += printf("%c", va_arg(argp, int)); \
					break; \
					case UCHAR_ANN: l += printf("%c", va_arg(argp, int)); \
					break; \
					case LONG_ANN: l += printf("%ld", va_arg(argp, long)); \
					break; \
					case ULONG_ANN: l += printf("%lu", va_arg(argp, unsigned long)); \
					break; \
					case LONGLONG_ANN: l += printf("%lld", va_arg(argp, long long)); \
					break; \
					case ULONGLONG_ANN: l += printf("%llu", va_arg(argp, unsigned long long)); \
					break; \
					case FLOAT_ANN:  \
					case DOUBLE_ANN: l += printf("%f", va_arg(argp, double)); \
				} \

int printff_func(char * fmt, ...) {
	va_list argp;
	va_start(argp, fmt);
	int l = 0;
	while (*fmt) {
		if (*fmt == '%') {
			fmt++;
			if (*fmt != '%') { 
				_print_type_helper
			}
			else {
				putchar(*fmt++);
				l++;
			}
		}
		else {
			putchar(*fmt++);
			l++;
		}
	}
	va_end(argp);
	return l;
}



